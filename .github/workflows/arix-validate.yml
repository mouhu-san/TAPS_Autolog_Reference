name: ARIX Validate (allowlist)

on:
  push:
    paths:
      - 'arix-16/schema/**'
      - 'arix-16/examples/**'
      - '.github/workflows/arix-validate.yml'
  workflow_dispatch:

jobs:
  validate:
    runs-on: ubuntu-latest
    env:
      # スキーマ（必要なら片方だけ使ってOK）
      SCHEMA_2020: arix-16/schema/arix16.schema.json
      SCHEMA_07:   arix-16/schema/arix16.schema.draft-07.json

      # ✅ 許可リスト（検証対象にする最小サンプルだけを列挙）
      ALLOWED_JSON:  arix-16/examples/exports_sample/taps_arix16_min.json
      ALLOWED_JSONL: arix-16/examples/exports_sample/taps_arix16_min.jsonl
      # 例）複数ある場合はスペース区切りで追加
      # ALLOWED_JSON:  "path/A.json path/B.json"
      # ALLOWED_JSONL: "path/A.jsonl path/B.jsonl"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install AJV CLI
        run: npm i -g ajv-cli ajv-formats

      - name: Debug allowlist presence
        run: |
          echo "JSON allowlist:  $ALLOWED_JSON"
          echo "JSONL allowlist: $ALLOWED_JSONL"
          for f in $ALLOWED_JSON $ALLOWED_JSONL; do
            if [ -n "$f" ]; then
              if [ -f "$f" ]; then
                echo "FOUND: $f"
              else
                echo "MISSING: $f" && exit 2
              fi
            fi
          done

      - name: Validate JSON (draft2020-12)
        run: |
          for f in $ALLOWED_JSON; do
            [ -f "$f" ] || continue
            echo "::group::Validating JSON: $f"
            ajv validate -c ajv-formats --spec=draft2020 -s "$SCHEMA_2020" -d "$f"
            echo "::endgroup::"
          done

       必要なら draft-07 でも検証（任意）
       - name: Validate JSON (draft-07)
         run: |
           for f in $ALLOWED_JSON; do
             [ -f "$f" ] || continue
             ajv validate -c ajv-formats --spec=draft7 -s "$SCHEMA_07" -d "$f"
           done

      - name: Validate NDJSON (each line, draft2020-12)
        shell: bash
        run: |
          for f in $ALLOWED_JSONL; do
            [ -f "$f" ] || continue
            echo "::group::Validating NDJSON: $f"
            # 空行と '#' 始まりを除外して1行ずつ検証
            awk 'NF && $0 !~ /^#/' "$f" | while IFS= read -r line; do
              printf '%s' "$line" | ajv validate -c ajv-formats --spec=draft2020 -s "$SCHEMA_2020" -d -
            done
            echo "::endgroup::"
          done