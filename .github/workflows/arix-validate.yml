name: ARIX Validate
on:
  push:
    paths:
      - 'arix-16/schema/**'
      - 'arix-16/examples/**'
  workflow_dispatch:

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install AJV CLI
        run: npm i -g ajv-cli ajv-formats

      - name: Debug sample presence
        run: |
          ls -la arix-16/examples/exports_sample || true
          test -f arix-16/examples/exports_sample/taps_arix16_min.json    && echo "FOUND JSON"  || (echo "MISSING JSON";  exit 2)
          test -f arix-16/examples/exports_sample/taps_arix16_min.jsonl  && echo "FOUND JSONL" || (echo "MISSING JSONL"; exit 2)

      # draft-2020 用（メイン）
      - name: Schema validate (JSON, draft2020)
        run: |
          ajv validate -c ajv-formats \
            --spec=draft2020 \
            -s arix-16/schema/arix16.schema.json \
            -d arix-16/examples/exports_sample/taps_arix16_min.json

- name: Schema validate (NDJSON, draft7)
  run: |
    SCHEMA='arix-16/schema/arix16.schema.draft-07.json'
    FILES='arix-16/examples/exports_sample/taps_arix16_min.jsonl'
    for f in $FILES; do
      echo "::group::Validating $f"
      awk 'NF && $0 !~ /^#/' "$f" | while IFS= read -r line; do
        printf '%s' "$line" | ajv validate -c ajv-formats --spec=draft7 -s "$SCHEMA" -d -
      done
      echo "::endgroup::"
    done