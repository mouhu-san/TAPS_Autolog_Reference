name: ARIX Validate

on:
  push:
    paths:
      - 'arix-16/schema/**'
      - 'arix-16/examples/**'
      - '.github/workflows/arix_validate.yml'
  workflow_dispatch:

jobs:
  validate:
    runs-on: ubuntu-latest

    env:
      SCHEMA_2020: arix-16/schema/arix16.schema.json
      SCHEMA_07:   arix-16/schema/arix16.schema.draft-07.json
      ALLOWED_JSON:  arix-16/examples/exports_sample/taps_arix16_min.json
      ALLOWED_JSONL: arix-16/examples/exports_sample/taps_arix16_min.jsonl

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install CLIs
        run: |
          npm i -g ajv-cli ajv-formats
          sudo apt-get update -y
          sudo apt-get install -y jq

      - name: Normalize line endings (CRLF -> LF)
        run: |
          # 例示ディレクトリ配下の .json/.jsonl/.tsv をLF化
          find arix-16/examples -type f \( -name '*.json' -o -name '*.jsonl' -o -name '*.tsv' \) \
            -exec perl -i -pe 's/\r$//' {} \;

      - name: Show schema enums (Intent / TopicTag)
        run: |
          echo "---- Intent enum ----"
          jq -r '.properties.Intent.enum // []' "$SCHEMA_2020"
          echo "---- TopicTag enum ----"
          jq -r '.properties.TopicTag.enum // []' "$SCHEMA_2020"

      - name: Validate JSON (min sample)
        run: |
          set -e
          for f in $ALLOWED_JSON; do
            [ -f "$f" ] || continue
            echo "::group::Validating JSON: $f"
            ajv validate -c ajv-formats --spec=draft2020 --all-errors --errors=text \
              -s "$SCHEMA_2020" -d "$f"
            echo "::endgroup::"
          done

      - name: Validate NDJSON (min sample, each line)
        run: |
          set -e
          for f in $ALLOWED_JSONL; do
            [ -f "$f" ] || continue
            echo "::group::Validating NDJSON: $f"
            # 空行 / '#'始まりを除外し、1行ずつ一時ファイルに書いて検証
            awk 'NF && $0 !~ /^#/' "$f" | while IFS= read -r line; do
              tmp="$(mktemp)"
              printf '%s' "$line" > "$tmp"
              ajv validate -c ajv-formats --spec=draft2020 --all-errors --errors=text \
                -s "$SCHEMA_2020" -d "$tmp" || { echo "❌ invalid line: $line"; rm -f "$tmp"; exit 2; }
              rm -f "$tmp"
            done
            echo "::endgroup::"
          done

      - name: Debug list examples
        run: |
          echo "--- examples/exports_sample ---"
          ls -la arix-16/examples/exports_sample || true